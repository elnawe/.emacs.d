** Zenburn

It's the best thing that happened to me since I started programming. I'm
just in love with *Zenburn*. By the way, everything I use looks like
Zenburn. [[https://github.com/bbatsov/zenburn-emacs][This]] is the theme
I use.

#+BEGIN_SRC emacs-lisp
(use-package zenburn-theme
  :init
  (load-theme 'zenburn t)
  :config
  (set-face-attribute 'font-lock-comment-face nil :italic nil))
#+END_SRC

** Personal changes

I have some extra configurations.

#+BEGIN_SRC emacs-lisp
(zenburn-with-color-variables
  ;; Editor
  (set-face-attribute 'anzu-mode-line nil
                      :foreground zenburn-green)
  (set-face-attribute 'anzu-mode-line-no-match nil
                      :foreground zenburn-red-4)
  (set-face-attribute 'anzu-replace-highlight nil
                      :background zenburn-red-4
                      :foreground zenburn-red+1)
  (set-face-attribute 'anzu-replace-to nil
                      :background zenburn-green-1
                      :foreground zenburn-green+4)
  (set-face-attribute 'auto-dim-other-buffers-face nil
                      :background "#1c1c1c")
  (set-face-attribute 'button nil
                      :foreground zenburn-yellow-2)
  (set-face-attribute 'isearch nil
                      :background zenburn-bg-1
                      :foreground zenburn-fg
                      :weight 'bold)
  (set-face-attribute 'region nil
                      :background zenburn-bg-1
                      :foreground zenburn-fg
                      :weight 'bold)
  (set-face-attribute 'vertical-border nil
                      :foreground zenburn-fg)


  ;; Default text
  (set-face-attribute 'default nil
                      :background zenburn-bg-05
                      :foreground zenburn-orange
                      :font elnawe/font-family
                      :height elnawe/font-size)

  ;; Code
  (set-face-attribute 'font-lock-builtin-face nil
                      :foreground zenburn-fg
                      :weight 'normal)
  (set-face-attribute 'font-lock-preprocessor-face nil
                      :foreground zenburn-orange)
  (set-face-attribute 'font-lock-function-name-face nil
                      :foreground zenburn-orange)
  (set-face-attribute 'font-lock-keyword-face nil
                      :foreground zenburn-fg
                      :weight 'normal)
  (set-face-attribute 'font-lock-constant-face nil
                      :foreground zenburn-green+4)
  (set-face-attribute 'font-lock-type-face nil
                      :foreground zenburn-cyan)
  (set-face-attribute 'help-argument-name nil
                      :foreground zenburn-orange
                      :italic nil)
  (set-face-attribute 'font-lock-string-face nil
                      :foreground "#989898")

  ;; Comments
  (set-face-attribute 'font-lock-comment-face nil
                      :foreground zenburn-red-1)
  (set-face-attribute 'font-lock-comment-delimiter-face nil
                      :foreground zenburn-red-1)
  (set-face-attribute 'font-lock-warning-face nil
                      :foreground zenburn-red
                      :underline '(:style wave)
                      :weight 'bold)

  ;; Modeline
  (set-face-attribute 'mode-line nil
                      :background "#1c1c1c"
                      :box nil
                      :foreground "#0087af")
  (set-face-attribute 'mode-line-inactive nil
                      :background zenburn-bg+1
                      :box nil
                      :foreground zenburn-bg-1)

  ;; Org mode
  (set-face-attribute 'org-level-1 nil
                      :foreground zenburn-fg)
  (set-face-attribute 'org-level-4 nil
                      :foreground zenburn-fg)
  (mapc
   (lambda (face)
     (when (eq (face-attribute face :background) zenburn-bg)
       (set-face-attribute face nil
                           :background 'unspecified)))
   (face-list)))

(add-hook 'js2-mode-hook
          (lambda ()
            (zenburn-with-color-variables
              (set-face-attribute 'js2-function-call nil
                                  :foreground zenburn-orange)
              (set-face-attribute 'js2-object-property nil
                                  :foreground zenburn-orange))))
(add-hook 'rjsx-mode-hook
          (lambda ()
            (zenburn-with-color-variables
              (set-face-attribute 'rjsx-attr nil
                                  :foreground zenburn-fg))))
#+END_SRC
